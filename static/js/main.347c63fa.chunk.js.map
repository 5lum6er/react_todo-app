{"version":3,"sources":["components/NewTodo/NewTodo.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","App.js","index.js"],"names":["NewTodo","state","title","onEnterKey","event","onAdd","props","keyCode","isCompleted","setState","handleChange","target","value","replace","trimLeft","this","className","placeholder","onKeyUp","onChange","React","Component","TodoItem","handleFlag","todo","onDelete","type","id","checked","onClick","TodoList","todos","filter","preventedTodos","map","key","App","newTodo","prevState","uuid","handleTodoCompletedStatus","handleSelectAllTodo","changeFilterType","name","onClearCompleted","htmlFor","handleTodoDoneStatus","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.347c63fa.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewTodo extends React.Component {\n  state = {\n    title: '',\n  }\n\n  onEnterKey = (event) => {\n    const { onAdd } = this.props;\n    const { title } = this.state;\n\n    if (event.keyCode === 13 && title) {\n      onAdd({\n        title,\n        isCompleted: false,\n      });\n      this.setState({\n        title: '',\n      });\n    }\n  }\n\n  handleChange = ({ target }) => {\n    this.setState({\n      title: target.value.replace(/\\s/, ' ').trimLeft(),\n    });\n  }\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <input\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={title}\n        onKeyUp={this.onEnterKey}\n        onChange={this.handleChange}\n      />\n    );\n  }\n}\n\nNewTodo.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TodoItem = (props) => {\n  const { handleFlag, todo, onDelete } = props;\n\n  return (\n    <>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          onChange={handleFlag}\n          value={todo.id}\n          checked={todo.isCompleted}\n        />\n        <label>{todo.title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          value={todo.id}\n          onClick={onDelete}\n        />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    isCompleted: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleFlag: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\nexport const TodoList = (props) => {\n  const { todos, handleFlag, filter, onDelete } = props;\n  let preventedTodos = [];\n\n  switch (filter) {\n    case 'All':\n      preventedTodos = todos;\n      break;\n    case 'Active':\n      preventedTodos = todos.filter(todo => !todo.isCompleted);\n      break;\n    case 'Completed':\n      preventedTodos = todos.filter(todo => todo.isCompleted);\n      break;\n    default:\n      return false;\n  }\n\n  return (\n    <ul className=\"todo-list\">\n      {\n        preventedTodos.map(todo => (\n          <li key={todo.id} className={todo.isCompleted ? 'completed' : ''}>\n            <TodoItem\n              todo={todo}\n              handleFlag={handleFlag}\n              onDelete={onDelete}\n            />\n          </li>\n        ))\n      }\n    </ul>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    isCompleted: PropTypes.bool.isRequired,\n  })).isRequired,\n  handleFlag: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { uuid } from 'uuidv4';\nimport { NewTodo } from './components/NewTodo/NewTodo';\nimport { TodoList } from './components/TodoList/TodoList';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    checked: false,\n    filter: 'All',\n  }\n\n  onAdd = (newTodo) => {\n    this.setState(prevState => ({\n      todos: [\n        ...prevState.todos,\n        {\n          ...newTodo,\n          id: uuid(),\n        },\n      ],\n    }));\n  }\n\n  handleTodoCompletedStatus = (event) => {\n    const { value } = event.target;\n\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => (\n        value === todo.id\n          ? {\n            ...todo,\n            isCompleted: !todo.isCompleted,\n          }\n          : todo\n      )),\n    }));\n  }\n\n  handleSelectAllTodo = () => {\n    this.setState(prevState => ({\n      checked: !prevState.checked,\n      todos: prevState.todos.map(todo => ({\n        ...todo,\n        isCompleted: !prevState.checked,\n      })),\n    }));\n  }\n\n  changeFilterType = (event) => {\n    const { name } = event.target;\n\n    this.setState({\n      filter: name,\n    });\n  }\n\n  onDelete = (event) => {\n    const { value } = event.target;\n\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== value),\n    }));\n  }\n\n  onClearCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.isCompleted),\n    }));\n  }\n\n  render() {\n    const { todos, checked, filter } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <NewTodo onAdd={this.onAdd} />\n        </header>\n\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onChange={this.handleSelectAllTodo}\n            checked={checked}\n          />\n          <label\n            htmlFor=\"toggle-all\"\n          >\n            Mark all as complete\n          </label>\n\n          <TodoList\n            filter={filter}\n            handleFlag={this.handleTodoDoneStatus}\n            todos={todos}\n            onDelete={this.onDelete}\n          />\n        </section>\n\n        {todos.length > 0\n        && (\n          <footer className=\"footer\">\n            <span className=\"todo-count\">\n              {`${todos.filter(todo => !todo.isCompleted).length} items left`}\n            </span>\n\n            <ul className=\"filters\">\n              <li>\n                <button\n                  type=\"button\"\n                  className=\"selected\"\n                  name=\"All\"\n                  onClick={this.changeFilterType}\n                >\n                  All\n                </button>\n              </li>\n\n              <li>\n                <button\n                  type=\"button\"\n                  name=\"Active\"\n                  onClick={this.changeFilterType}\n                >\n                  Active\n                </button>\n              </li>\n\n              <li>\n                <button\n                  type=\"button\"\n                  name=\"Completed\"\n                  onClick={this.changeFilterType}\n                >\n                  Completed\n                </button>\n              </li>\n            </ul>\n\n            <button\n              type=\"button\"\n              className=\"clear-completed\"\n              onClick={this.onClearCompleted}\n            >\n              Clear completed\n            </button>\n          </footer>\n        )\n        }\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}